digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: insert_shaft1_into_gearbase_hole1", shape=octagon, style=filled];
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: unload_outward_claw_and_load_parallel_box1", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1" -> "sequence: unload_outward_claw_and_load_parallel_box1";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: check_and_unload_outward_claw", shape=octagon, style=filled];
"sequence: unload_outward_claw_and_load_parallel_box1" -> "selector: check_and_unload_outward_claw";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(left_hand)", shape=ellipse, style=filled];
"selector: check_and_unload_outward_claw" -> "precondition: is_free(left_hand)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: unload_outward_claw", shape=box, style=filled];
"selector: check_and_unload_outward_claw" -> "sequence: unload_outward_claw";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(outward_claw)", shape=ellipse, style=filled];
"sequence: unload_outward_claw" -> "precondition: is_free(outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, outward_claw)", shape=ellipse, style=filled];
"sequence: unload_outward_claw" -> "precondition: hold(left_hand, outward_claw)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: unload_tool(left_hand, outward_claw)", shape=ellipse, style=filled];
"sequence: unload_outward_claw" -> "action: unload_tool(left_hand, outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_equippable(parallel_box1)", shape=ellipse, style=filled];
"sequence: unload_outward_claw_and_load_parallel_box1" -> "precondition: is_equippable(parallel_box1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(left_hand)*", shape=ellipse, style=filled];
"sequence: unload_outward_claw_and_load_parallel_box1" -> "precondition: is_free(left_hand)*";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: load_tool(left_hand, parallel_box1)", shape=ellipse, style=filled];
"sequence: unload_outward_claw_and_load_parallel_box1" -> "action: load_tool(left_hand, parallel_box1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: pick_up_shaft1_with_parallel_box1", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1" -> "sequence: pick_up_shaft1_with_parallel_box1";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: can_manipulate(parallel_box1, shaft1)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallel_box1" -> "precondition: can_manipulate(parallel_box1, shaft1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(parallel_box1)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallel_box1" -> "precondition: is_free(parallel_box1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: pick_up(left_hand, parallel_box1, shaft1)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallel_box1" -> "action: pick_up(left_hand, parallel_box1, shaft1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: insert_shaft1_into_gearbase_hole1", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1" -> "sequence: insert_shaft1_into_gearbase_hole1";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: can_insert_to(shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1" -> "precondition: can_insert_to(shaft1, gearbase_hole1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(parallel_box1, shaft1)", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1" -> "precondition: hold(parallel_box1, shaft1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1" -> "action: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: unload_parallel_box1_after_task", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1" -> "sequence: unload_parallel_box1_after_task";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(parallel_box1)*", shape=ellipse, style=filled];
"sequence: unload_parallel_box1_after_task" -> "precondition: is_free(parallel_box1)*";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: unload_tool(left_hand, parallel_box1)", shape=ellipse, style=filled];
"sequence: unload_parallel_box1_after_task" -> "action: unload_tool(left_hand, parallel_box1)";
}
