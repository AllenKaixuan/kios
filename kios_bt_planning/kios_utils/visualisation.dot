digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
"selector:
 move_to(robot_arm, point_A)" [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector:
 move_to(robot_arm, point_A)", shape=octagon, style=filled];
"target:
 at(robot_arm, point_A)" [fillcolor=gray, fontcolor=black, fontsize=9, label="target:
 at(robot_arm, point_A)", shape=ellipse, style=filled];
"selector:
 move_to(robot_arm, point_A)" -> "target:
 at(robot_arm, point_A)";
"sequence:
 move_to(robot_arm, point_A)" [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence:
 move_to(robot_arm, point_A)", shape=box, style=filled];
"selector:
 move_to(robot_arm, point_A)" -> "sequence:
 move_to(robot_arm, point_A)";
"precondition:
 can_move_to(robot_arm, point_A)" [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition:
 can_move_to(robot_arm, point_A)", shape=ellipse, style=filled];
"sequence:
 move_to(robot_arm, point_A)" -> "precondition:
 can_move_to(robot_arm, point_A)";
"action:
 move_to(robot_arm, point_A)" [fillcolor=gray, fontcolor=black, fontsize=9, label="action:
 move_to(robot_arm, point_A)", shape=ellipse, style=filled];
"sequence:
 move_to(robot_arm, point_A)" -> "action:
 move_to(robot_arm, point_A)";
}
