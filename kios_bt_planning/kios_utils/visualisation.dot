digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: insert_shaft1_into_gearbase_hole1_using_parallelgripper", shape=octagon, style=filled];
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: is_inserted_to(shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"selector: insert_shaft1_into_gearbase_hole1_using_parallelgripper" -> "target: is_inserted_to(shaft1, gearbase_hole1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: insert_shaft1_into_gearbase_hole1_using_parallelgripper", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1_using_parallelgripper" -> "sequence: insert_shaft1_into_gearbase_hole1_using_parallelgripper";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: change_tool(left_hand, outwardgripper, parallelgripper)", shape=octagon, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_using_parallelgripper" -> "selector: change_tool(left_hand, outwardgripper, parallelgripper)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(left_hand, parallelgripper)", shape=ellipse, style=filled];
"selector: change_tool(left_hand, outwardgripper, parallelgripper)" -> "target: hold(left_hand, parallelgripper)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: change_tool(left_hand, outwardgripper, parallelgripper)", shape=box, style=filled];
"selector: change_tool(left_hand, outwardgripper, parallelgripper)" -> "sequence: change_tool(left_hand, outwardgripper, parallelgripper)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, outwardgripper)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, outwardgripper, parallelgripper)" -> "precondition: hold(left_hand, outwardgripper)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_empty(outwardgripper)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, outwardgripper, parallelgripper)" -> "precondition: is_empty(outwardgripper)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: change_tool(left_hand, outwardgripper, parallelgripper)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, outwardgripper, parallelgripper)" -> "action: change_tool(left_hand, outwardgripper, parallelgripper)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: pick_up_shaft1_with_parallelgripper", shape=octagon, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_using_parallelgripper" -> "selector: pick_up_shaft1_with_parallelgripper";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(parallelgripper, shaft1)", shape=ellipse, style=filled];
"selector: pick_up_shaft1_with_parallelgripper" -> "target: hold(parallelgripper, shaft1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: pick_up_shaft1_with_parallelgripper", shape=box, style=filled];
"selector: pick_up_shaft1_with_parallelgripper" -> "sequence: pick_up_shaft1_with_parallelgripper";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, parallelgripper)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallelgripper" -> "precondition: hold(left_hand, parallelgripper)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_empty(parallelgripper)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallelgripper" -> "precondition: is_empty(parallelgripper)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: pick_up(left_hand, parallelgripper, shaft1)", shape=ellipse, style=filled];
"sequence: pick_up_shaft1_with_parallelgripper" -> "action: pick_up(left_hand, parallelgripper, shaft1)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: insert_shaft1_into_gearbase_hole1_with_parallelgripper", shape=octagon, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_using_parallelgripper" -> "selector: insert_shaft1_into_gearbase_hole1_with_parallelgripper";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: is_inserted_to(shaft1, gearbase_hole1)*", shape=ellipse, style=filled];
"selector: insert_shaft1_into_gearbase_hole1_with_parallelgripper" -> "target: is_inserted_to(shaft1, gearbase_hole1)*";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: insert_shaft1_into_gearbase_hole1_with_parallelgripper", shape=box, style=filled];
"selector: insert_shaft1_into_gearbase_hole1_with_parallelgripper" -> "sequence: insert_shaft1_into_gearbase_hole1_with_parallelgripper";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, parallelgripper)*", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_with_parallelgripper" -> "precondition: hold(left_hand, parallelgripper)*";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(parallelgripper, shaft1)", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_with_parallelgripper" -> "precondition: hold(parallelgripper, shaft1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: insert(left_hand, parallelgripper, shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"sequence: insert_shaft1_into_gearbase_hole1_with_parallelgripper" -> "action: insert(left_hand, parallelgripper, shaft1, gearbase_hole1)";
}
