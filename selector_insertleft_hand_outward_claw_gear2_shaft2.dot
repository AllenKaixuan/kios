digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: insert(left_hand, outward_claw, gear2, shaft2)", shape=octagon, style=filled];
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: is_inserted_to(gear2, shaft2)", shape=ellipse, style=filled];
"selector: insert(left_hand, outward_claw, gear2, shaft2)" -> "target: is_inserted_to(gear2, shaft2)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: insert(left_hand, outward_claw, gear2, shaft2)", shape=box, style=filled];
"selector: insert(left_hand, outward_claw, gear2, shaft2)" -> "sequence: insert(left_hand, outward_claw, gear2, shaft2)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: change_tool(left_hand, parallel_box1, outward_claw)", shape=octagon, style=filled];
"sequence: insert(left_hand, outward_claw, gear2, shaft2)" -> "selector: change_tool(left_hand, parallel_box1, outward_claw)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(left_hand, outward_claw)", shape=ellipse, style=filled];
"selector: change_tool(left_hand, parallel_box1, outward_claw)" -> "target: hold(left_hand, outward_claw)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: change_tool(left_hand, parallel_box1, outward_claw)", shape=box, style=filled];
"selector: change_tool(left_hand, parallel_box1, outward_claw)" -> "sequence: change_tool(left_hand, parallel_box1, outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, parallel_box1)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, parallel_box1, outward_claw)" -> "precondition: hold(left_hand, parallel_box1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_empty(parallel_box1)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, parallel_box1, outward_claw)" -> "precondition: is_empty(parallel_box1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: change_tool(left_hand, parallel_box1, outward_claw)", shape=ellipse, style=filled];
"sequence: change_tool(left_hand, parallel_box1, outward_claw)" -> "action: change_tool(left_hand, parallel_box1, outward_claw)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: pick_up(left_hand, outward_claw, gear2)", shape=octagon, style=filled];
"sequence: insert(left_hand, outward_claw, gear2, shaft2)" -> "selector: pick_up(left_hand, outward_claw, gear2)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(outward_claw, gear2)", shape=ellipse, style=filled];
"selector: pick_up(left_hand, outward_claw, gear2)" -> "target: hold(outward_claw, gear2)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: pick_up(left_hand, outward_claw, gear2)", shape=box, style=filled];
"selector: pick_up(left_hand, outward_claw, gear2)" -> "sequence: pick_up(left_hand, outward_claw, gear2)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, outward_claw)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, outward_claw, gear2)" -> "precondition: hold(left_hand, outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_empty(outward_claw)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, outward_claw, gear2)" -> "precondition: is_empty(outward_claw)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: pick_up(left_hand, outward_claw, gear2)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, outward_claw, gear2)" -> "action: pick_up(left_hand, outward_claw, gear2)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: insert(left_hand, outward_claw, gear2, shaft2)", shape=ellipse, style=filled];
"sequence: insert(left_hand, outward_claw, gear2, shaft2)" -> "action: insert(left_hand, outward_claw, gear2, shaft2)";
}
