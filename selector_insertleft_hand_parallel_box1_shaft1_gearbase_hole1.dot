digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)", shape=octagon, style=filled];
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: is_inserted_to(shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"selector: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "target: is_inserted_to(shaft1, gearbase_hole1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)", shape=box, style=filled];
"selector: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: load_tool(left_hand, parallel_box1)", shape=octagon, style=filled];
"sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "selector: load_tool(left_hand, parallel_box1)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(left_hand, parallel_box1)", shape=ellipse, style=filled];
"selector: load_tool(left_hand, parallel_box1)" -> "target: hold(left_hand, parallel_box1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: load_tool(left_hand, parallel_box1)", shape=box, style=filled];
"selector: load_tool(left_hand, parallel_box1)" -> "sequence: load_tool(left_hand, parallel_box1)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: unload_tool(left_hand, outward_claw)", shape=octagon, style=filled];
"sequence: load_tool(left_hand, parallel_box1)" -> "selector: unload_tool(left_hand, outward_claw)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: is_free(left_hand)", shape=ellipse, style=filled];
"selector: unload_tool(left_hand, outward_claw)" -> "target: is_free(left_hand)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: unload_tool(left_hand, outward_claw)", shape=box, style=filled];
"selector: unload_tool(left_hand, outward_claw)" -> "sequence: unload_tool(left_hand, outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(outward_claw)", shape=ellipse, style=filled];
"sequence: unload_tool(left_hand, outward_claw)" -> "precondition: is_free(outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, outward_claw)", shape=ellipse, style=filled];
"sequence: unload_tool(left_hand, outward_claw)" -> "precondition: hold(left_hand, outward_claw)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: unload_tool(left_hand, outward_claw)", shape=ellipse, style=filled];
"sequence: unload_tool(left_hand, outward_claw)" -> "action: unload_tool(left_hand, outward_claw)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_equippable(parallel_box1)", shape=ellipse, style=filled];
"sequence: load_tool(left_hand, parallel_box1)" -> "precondition: is_equippable(parallel_box1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: load_tool(left_hand, parallel_box1)", shape=ellipse, style=filled];
"sequence: load_tool(left_hand, parallel_box1)" -> "action: load_tool(left_hand, parallel_box1)";
selector [fillcolor=cyan, fontcolor=black, fontsize=9, label="selector: pick_up(left_hand, parallel_box1, shaft1)", shape=octagon, style=filled];
"sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "selector: pick_up(left_hand, parallel_box1, shaft1)";
target [fillcolor=gray, fontcolor=black, fontsize=9, label="target: hold(parallel_box1, shaft1)", shape=ellipse, style=filled];
"selector: pick_up(left_hand, parallel_box1, shaft1)" -> "target: hold(parallel_box1, shaft1)";
sequence [fillcolor=orange, fontcolor=black, fontsize=9, label="sequence: pick_up(left_hand, parallel_box1, shaft1)", shape=box, style=filled];
"selector: pick_up(left_hand, parallel_box1, shaft1)" -> "sequence: pick_up(left_hand, parallel_box1, shaft1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: is_free(parallel_box1)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, parallel_box1, shaft1)" -> "precondition: is_free(parallel_box1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: hold(left_hand, parallel_box1)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, parallel_box1, shaft1)" -> "precondition: hold(left_hand, parallel_box1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: pick_up(left_hand, parallel_box1, shaft1)", shape=ellipse, style=filled];
"sequence: pick_up(left_hand, parallel_box1, shaft1)" -> "action: pick_up(left_hand, parallel_box1, shaft1)";
precondition [fillcolor=gray, fontcolor=black, fontsize=9, label="precondition: can_insert_to(shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "precondition: can_insert_to(shaft1, gearbase_hole1)";
action [fillcolor=gray, fontcolor=black, fontsize=9, label="action: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)", shape=ellipse, style=filled];
"sequence: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)" -> "action: insert(left_hand, parallel_box1, shaft1, gearbase_hole1)";
}
